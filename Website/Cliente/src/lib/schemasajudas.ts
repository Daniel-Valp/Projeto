import { z } from "zod";

// üîπ Schema para o formul√°rio de cap√≠tulo
export const chapterSchema = z.object({
  capitulotitulo: z.string().min(1, "O t√≠tulo do cap√≠tulo √© obrigat√≥rio"),
  conteudo: z.string().min(1, "O conte√∫do do cap√≠tulo √© obrigat√≥rio"),
  video: z.union([
    z.string().url("O v√≠deo deve ser um link v√°lido"),
    z.literal(""),
    z.undefined()
  ]), // üëà aceita link, vazio ou indefinido
  imagem: z.string().optional(),
});




// üîπ Tipo inferido automaticamente do schema (para usar no formul√°rio)
export type ChapterFormData = {
  capitulotitulo: string;
  conteudo: string;
  video?: string;
  imagem?: string; // üëà adicionar esta linha
};




// üîπ Schema para o formul√°rio de curso (que j√° tinhas)
export const cursoFormSchema = z.object({
  cursotitulo: z
    .string()
    .min(1, "O t√≠tulo √© obrigat√≥rio")
    .max(40, "O t√≠tulo deve ter no m√°ximo 20 caracteres"),
  cursodescricao: z.string().min(1, "A descri√ß√£o √© obrigat√≥ria"),
  cursocategoria: z.string().min(1, "A categoria √© obrigat√≥ria"),
  cursosubcategoria: z.string().min(1, "A subcategoria √© obrigat√≥ria"),
  cursohoras: z.string().min(1, "As horas s√£o obrigat√≥rias"),
  cursoestado: z.boolean(),
  cursoimagem: z.any().optional(), // aceita File, string ou nada
});

export type CursoFormData = z.infer<typeof cursoFormSchema>;

export const sectionSchema = z.object({
  secaotitulo: z.string().min(1, "O t√≠tulo da sec√ß√£o √© obrigat√≥rio"),
  secaodescricao: z.string().min(1, "A descri√ß√£o da sec√ß√£o √© obrigat√≥ria"),
});

export type SectionFormData = z.infer<typeof sectionSchema>;

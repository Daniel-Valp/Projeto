import { Secao } from "./Sec√ß√µestipo";

export interface Curso {
  categoria_id: string;
  subcategoriaid: number;
  id: string;
  cursoid: string;
  professorid: string;
  professornome: string;
  titulo: string;
  descricao: string;
  categoria: Categoria;
  subcategoria: Subcategoria; // üëà Mant√©ns isto para outras partes que usem o objeto completo
  imagem?: string;
  nivel: "Iniciante" | "Intermediario" | "Avan√ßado";
  estado: "Rascunho" | "Publicado";
  horas: number;
  secoes: Secao[];
  enlistados: number;
  criadoem: string;
  atualizadoem: string;
}


export interface Categoria { // üî• Novo tipo para refletir a tabela `categorias`
  id: string;
  nome: string;
}

export interface Subcategoria {
  subcategoriaid: string;
  nome: string;
}

export interface ProcurarPeloCurso {
  curso: Curso; 
  isSelected?: boolean;
  onClick?: () => void;
}

export interface CursoSelecionado {
  Curso: Curso;
  handleEnrollNow: (cursoid: string) => void;
}

import { z } from "zod";

export const cursoFormSchema = z.object({
  cursotitulo: z.string().min(1, "O t√≠tulo √© obrigat√≥rio"),
  cursodescricao: z.string().min(1, "A descri√ß√£o √© obrigat√≥ria"),
  cursocategoria: z.string().min(1, "A categoria √© obrigat√≥ria"),
  cursosubcategoria: z.string().min(1, "A subcategoria √© obrigat√≥ria"),
  cursohoras: z.string().min(1, "As horas s√£o obrigat√≥rias"),
  cursoestado: z.boolean(),
});

// üëá aqui sim o tipo!
export type CursoFormData = z.infer<typeof cursoFormSchema>;
